import{_ as l,o as t,c as i,b as o}from"./app-1f8a5ff3.js";const e={},s=o("<p>微服务架构设计的核⼼思想就是“微“，拆分的粒度相对⽐较⼩，这样的话单⼀职责、开发的耦合度就会降低、微⼩的功能可以独⽴部署扩展、灵活性强，升级改造影响范围⼩。</p><p>单体应⽤（1.7—&gt;1.8）</p><p>A(升级JDK) B C D E .....</p><p><strong>微服务架构的优点</strong>: 微服务架构和微服务</p><ol><li>微服务很⼩，便于特定业务功能的聚焦 A B C D</li><li>微服务很⼩，每个微服务都可以被⼀个⼩团队单独实施（开发、测试、部署上线、运维），团队合作⼀定程度解耦，便于实施敏捷开发</li><li>微服务很⼩，便于重⽤和模块之间的组装</li><li>微服务很独⽴，那么不同的微服务可以使⽤不同的语⾔开发，松耦合</li><li>微服务架构下，我们更容易引⼊新技术</li><li>微服务架构下，我们可以更好的实现DevOps开发运维⼀体化；</li></ol><p><strong>微服务架构的缺点</strong></p><ol><li>微服务架构下，分布式复杂难以管理，当服务数量增加，管理将越加复杂；</li><li>微服务架构下，分布式链路跟踪难等；</li></ol>",7),c=[s];function n(_,r){return t(),i("div",null,c)}const a=l(e,[["render",n],["__file","12.html.vue"]]);export{a as default};
