import{_ as n,o as s,c as a,b as t}from"./app-1f8a5ff3.js";const e="/msz-blog/assets/1699084252566-e8b776f1.png",p="/msz-blog/assets/1699084579063-d4f2cecd.png",l="/msz-blog/assets/1699084764676-02e56380.png",c="/msz-blog/assets/1699085753783-27671392.png",o="/msz-blog/assets/1699086372191-ed8c0ec3.png",i="/msz-blog/assets/1699087755690-7f966232.png",u={},r=t(`<p>第⼀代 Spring Cloud （主要是 SCN）很多组件已经进⼊停更维护模式。</p><p>Spring Cloud：Netflix，Spring官方，SCA（被Spring官方认可）</p><p>注意：市场上主要使⽤的还是SCN，SCA⼀套框架的集合 Alibaba 更进⼀步，搞出了Spring Cloud Alibaba（SCA），SCA 是由⼀些阿⾥巴巴 的开源组件和云产品组成的，2018年，Spring Cloud Alibaba 正式⼊住了 Spring Cloud 官方孵化器。</p><p>Nacos（服务注册中⼼、配置中心）</p><p>Sentinel哨兵（服务的熔断、限流等）</p><p>Dubbo RPC/LB</p><p>Seata分布式事务解决方案</p><hr><h2 id="_7-1-sca-nacos-服务注册和配置中心" tabindex="-1"><a class="header-anchor" href="#_7-1-sca-nacos-服务注册和配置中心" aria-hidden="true">#</a> <strong>7.1 SCA Nacos 服务注册和配置中心</strong></h2><h3 id="_7-1-1-nacos-介绍" tabindex="-1"><a class="header-anchor" href="#_7-1-1-nacos-介绍" aria-hidden="true">#</a> <strong>7.1.1 Nacos</strong> <strong>介绍</strong></h3><p>Nacos （Dynamic Naming and Configuration Service）是阿⾥巴巴开源的⼀个针对微服务架构中服务发现、配置管理和服务管理平台。</p><p>Nacos就是注册中心+配置中⼼的组合（Nacos=Eureka+Config+Bus）</p><p>官网：https://nacos.io 下载地址：https://github.com/alibaba/Nacos</p><p><strong>Nacos 功能特性</strong></p><ul><li>服务发现与健康检查</li><li>动态配置管理</li><li>动态DNS服务</li><li>服务和元数据管理（管理平台的⻆度，nacos也有⼀个ui⻚⾯，可以看到注册的服务及其实例信息（元数据信息）等），动态的服务权重调整、动态服务优雅下线，都可以去做。</li></ul><h3 id="_7-1-2-nacos-单例服务部署" tabindex="-1"><a class="header-anchor" href="#_7-1-2-nacos-单例服务部署" aria-hidden="true">#</a> <strong>7.1.2 Nacos 单例服务部署</strong></h3><p>下载解压安装包，执⾏命令启动（我们使⽤最近比较稳定的版本 nacos-server- 1.2.0.tar.gz）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>linux/mac：sh startup.sh <span class="token parameter variable">-m</span> standalone
windows：cmd startup.cmd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>访问nacos管理界⾯：http://127.0.0.1:8848/nacos/#/login（默认端⼝8848， 账号和密码 nacos/nacos）</p><p><img src="`+e+`" alt="1699084252566"></p><h3 id="_7-1-3-nacos-服务注册中心" tabindex="-1"><a class="header-anchor" href="#_7-1-3-nacos-服务注册中心" aria-hidden="true">#</a> <strong>7.1.3 Nacos</strong> 服务注册中心</h3><p><strong>7.1.3.1 服务提供者注册到 Nacos( 改造简历微服务 )</strong></p><ul><li>在父pom中引⼊SCA依赖</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
 <span class="token comment">&lt;!--SCA --&gt;</span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.1.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
 <span class="token comment">&lt;!--SCA --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在服务提供者⼯程中引⼊nacos客户端依赖（注释eureka客户端）</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacosdiscovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>application.yml修改，添加nacos配置信息</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
 <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8082</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
 <span class="token key atrule">application</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>service<span class="token punctuation">-</span>resume
 <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
  <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
   <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
     <span class="token comment">################ 配置nacos server地址</span>
     <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span>
 <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
  <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver
  <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/lagou<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding=utf8</span>
  <span class="token key atrule">username</span><span class="token punctuation">:</span> root
  <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>
 <span class="token key atrule">jpa</span><span class="token punctuation">:</span>
  <span class="token key atrule">database</span><span class="token punctuation">:</span> MySQL
  <span class="token key atrule">show-sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">hibernate</span><span class="token punctuation">:</span>
   <span class="token key atrule">naming</span><span class="token punctuation">:</span>
    <span class="token key atrule">physical-strategy</span><span class="token punctuation">:</span>
      org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl 
<span class="token key atrule">management</span><span class="token punctuation">:</span>
 <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>
  <span class="token key atrule">web</span><span class="token punctuation">:</span>
   <span class="token key atrule">exposure</span><span class="token punctuation">:</span>
    <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&#39;*&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动简历微服务，观察nacos控制台</li></ul><p><img src="`+p+'" alt="1699084579063"></p><p>保护阈值：可以设置为0-1之间的浮点数，它其实是⼀个⽐例值（当前服务健康实例数/当前服务总实例数）</p><p><strong>场景：</strong></p><p>⼀般流程下，nacos是服务注册中⼼，服务消费者要从nacos获取某⼀个服务的可用实例信息，对于服务实例有健康/不健康状态之分，nacos在返回给消费者实例信息的时候，会返回健康实例。这个时候在⼀些高并发、⼤流量场景下会存在⼀定的问题。</p><p>如果服务A有100个实例，98个实例都不健康了，只有2个实例是健康的，如果nacos 只返回这两个健康实例的信息的话，那么后续消费者的请求将全部被分配到这两个实例，流量洪峰到来，2个健康的实例也扛不住了，整个服务A 就扛不住，上游的微服务也会导致崩溃，，，产⽣雪崩效应。</p><p>保护阈值的意义在于 ：当服务A健康实例数/总实例数 &lt; 保护阈值 的时候，说明健康实例真的不多了，这个时候保护阈值会被触发（状态true）</p><p>nacos将会把该服务所有的实例信息（健康的+不健康的）全部提供给消费者，消费者可能访问到不健康的实例，请求失败，但这样也比造成雪崩要好，牺牲了⼀些请求，保证了整个系统的⼀个可用。</p><p>注意：阿里内部在使⽤nacos的时候，也经常调整这个保护阈值参数。</p><p><strong>7.1.3.2</strong> <strong>服务消费者从 Nacos 获取服务提供者 ( 改造自动投递微服务 )</strong></p><ul><li>同服务提供者</li><li>测试</li></ul><p><img src="'+l+'" alt="1699084764676"></p><p><strong>7.1.3.3</strong> <strong>负载均衡</strong></p><p>Nacos客户端引⼊的时候，会关联引⼊Ribbon的依赖包，我们使⽤OpenFiegn的时候也会引⼊Ribbon的依赖，Ribbon包括Hystrix都按原来⽅式进行配置即可</p><p>此处，我们将简历微服务，⼜启动了⼀个8083端⼝，注册到Nacos上，便于测试负载均衡，我们通过后台也可以看出。</p><p><strong>7.1.3.4 Nacos</strong> <strong>数据模型（领域模型）</strong></p><p>Namespace命名空间、Group分组、集群这些都是为了进行归类管理，把<strong>服务和配置文件</strong>进行归类，归类之后就可以实现⼀定的效果，比如隔离</p><p>⽐如，对于服务来说，不同命名空间中的服务不能够互相访问调用</p><p><img src="'+c+'" alt="1699085753783"></p><p>Namespace：命名空间，对不同的环境进⾏隔离，⽐如隔离开发环境、测试环境和生产环境</p><p>Group：分组，将若⼲个服务或者若⼲个配置集归为⼀组，通常习惯⼀个系统归为⼀个组</p><p>Service：某⼀个服务，比如简历微服务</p><p>DataId：配置集或者可以认为是⼀个配置⽂件</p><p><strong>Namespace + Group + Service</strong> <strong>如同 Maven 中的 GAV 坐标， GAV 坐标是为了锁定 Jar ，二这里是为了锁定服务</strong></p><p><strong>Namespace + Group + DataId 如同 Maven 中的GAV坐标，GAV坐标是为了锁定Jar，二这里是为了锁定配置文件</strong></p><ul><li><strong>最佳实践</strong></li></ul><p>Nacos抽象出了Namespace、Group、Service、DataId等概念，具体代表什么取决于怎么用（非常灵活），推荐用法如下</p><table><thead><tr><th style="text-align:center;">概念</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">Namespace</td><td style="text-align:center;">代表不同的环境，如开发dev、测试test、⽣产环境prod</td></tr><tr><td style="text-align:center;">Group</td><td style="text-align:center;">代表某项⽬，比如拉勾云项⽬</td></tr><tr><td style="text-align:center;">Service</td><td style="text-align:center;">某个项目中具体xxx服务</td></tr><tr><td style="text-align:center;">DataId</td><td style="text-align:center;">某个项目中具体的xxx配置⽂件</td></tr></tbody></table><ul><li>Nacos服务的分级模型</li></ul><p><img src="'+o+`" alt="1699086372191"></p><p><strong>7.1.3.5 Nacos Server</strong> <strong>数据持久化</strong></p><p>Nacos 默认使⽤嵌⼊式数据库进⾏数据存储，它⽀持改为外部Mysql存储</p><ul><li>新建数据库 nacos_config，数据库初始化脚本文件 \${nacoshome}/conf/nacos-mysql.sql</li><li>修改\${nacoshome}/conf/application.properties，增加Mysql数据源配置</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>spring.datasource.platform=mysql
### Count of DB:
db.num=1
### Connect URL of DB:
db.url.0=jdbc:mysql://127.0.0.1:3306/nacos_config?
characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true
db.user=root
db.password=123456
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>7.1.3.6 Nacos Server</strong> <strong>集群</strong></p><ul><li><p>安装3个或3个以上的Nacos</p><p>复制解压后的nacos⽂件夹，分别命名为nacos-01、nacos-02、nacos-03</p></li><li><p>修改配置⽂件</p><p>同⼀台机器模拟，将上述三个⽂件夹中application.properties中的 server.port分别改为 8848、8849、8850</p><p>同时给当前实例节点绑定ip，因为服务器可能绑定多个ip</p></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>nacos.inetutils.ip-address=127.0.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>复制⼀份conf/cluster.conf.example⽂件，命名为cluster.conf 在配置⽂件中设置集群中每⼀个节点的信息</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code># 集群节点配置
127.0.0.1:8848
127.0.0.1:8849
127.0.0.1:8850
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>分别启动每⼀个实例（可以批处理脚本完成）</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sh startup.sh -m cluster
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_7-1-4-nacos-配置中心" tabindex="-1"><a class="header-anchor" href="#_7-1-4-nacos-配置中心" aria-hidden="true">#</a> <strong>7.1.4 Nacos 配置中心</strong></h3><p>之前：Spring Cloud Config + Bus</p><ol><li>Github 上添加配置⽂件</li></ol><p>2）创建Config Server 配置中⼼—&gt;从Github上去下载配置信息</p><p>3）具体的微服务(最终使用配置信息的)中配置Config Client—&gt; ConfigServer获取配置信息</p><hr><p>有Nacos之后，分布式配置就简单很多 Github不需要了（配置信息直接配置在Nacos server中），Bus也不需要了(依然可以完成动态刷新)</p><p>接下来</p><p>1、去Nacos server中添加配置信息</p><p>2、改造具体的微服务，使其成为Nacos Config Client，能够从Nacos Server中获取到配置信息</p><p><strong>Nacos server 添加配置集</strong></p><p><img src="`+i+`" alt="1699087755690"></p><p>Nacos 服务端已经搭建完毕，那么我们可以在我们的微服务中开启 Nacos 配置管理</p><p>1）添加依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）微服务中如何锁定 Nacos Server 中的配置⽂件（dataId）通过 Namespace + Group + dataId 来锁定配置⽂件，Namespace不指定就默认 public，Group不指定就默认 DEFAULT_GROUP</p><p><strong>dataId</strong> <strong>的完整格式如下</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>\${prefix}-\${spring.profile.active}.\${file-extension}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>prefix 默认为 spring.application.name 的值，也可以通过配置项 spring.cloud.nacos.config.prefix 来配置。</p></li><li><p>spring.profile.active 即为当前环境对应的 profile。 <strong>注意：当spring.profile.active</strong> <strong>为空时，对应的连接符</strong> <strong>-</strong> <strong>也将不存在，dataId的拼接格式变成</strong></p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\${prefix}.\${file-extension}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>file-exetension 为配置内容的数据格式，可以通过配置项 spring.cloud.nacos.config.file-extension 来配置。⽬前只⽀持 properties 和 yaml 类型。</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">cloud</span><span class="token punctuation">:</span>
 <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
  <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
  <span class="token comment"># 集群中各节点信息都配置在这⾥（域名-VIP-绑定映射到各个实例的地址信息）</span>
   <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span>
  <span class="token key atrule">config</span><span class="token punctuation">:</span>
   <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span>
   <span class="token key atrule">namespace</span><span class="token punctuation">:</span> f965f7e4<span class="token punctuation">-</span>7294<span class="token punctuation">-</span>40cf<span class="token punctuation">-</span>825c<span class="token punctuation">-</span>ef363c269d37
   <span class="token key atrule">group</span><span class="token punctuation">:</span> DEFAULT_GROUP
   <span class="token key atrule">file-extension</span><span class="token punctuation">:</span> yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3）通过 Spring Cloud 原⽣注解 @RefreshScope 实现配置⾃动更新</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lagou<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>context<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RefreshScope</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
* 该类⽤于模拟，我们要使⽤共享的那些配置信息做⼀些事情
*/</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/config&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RefreshScope</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigController</span> <span class="token punctuation">{</span>
 <span class="token comment">// 和取本地配置信息⼀样</span>
 <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${lagou.message}&quot;</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> lagouMessage<span class="token punctuation">;</span>
 <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${mysql.url}&quot;</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> mysqlUrl<span class="token punctuation">;</span>
 <span class="token comment">// 内存级别的配置信息</span>
 <span class="token comment">// 数据库，redis配置信息</span>
 <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/viewconfig&quot;</span><span class="token punctuation">)</span>
 <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">viewconfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token string">&quot;lagouMessage==&gt;&quot;</span> <span class="token operator">+</span> lagouMessage <span class="token operator">+</span> <span class="token string">&quot; mysqlUrl=&gt;&quot;</span> <span class="token operator">+</span> mysqlUrl<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>思考：⼀个微服务希望从配置中⼼Nacos server中获取多个dataId的配置信息，可以的，扩展多个dataId</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># nacos配置</span>
 <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
  <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
   <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
    <span class="token comment"># 集群中各节点信息都配置在这⾥（域名-VIP-绑定映射到各个实例的地址信息）</span>
    <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span><span class="token punctuation">,</span>127.0.0.1<span class="token punctuation">:</span><span class="token number">8849</span><span class="token punctuation">,</span>127.0.0.1<span class="token punctuation">:</span><span class="token number">8850</span>
    <span class="token comment"># nacos config 配置</span>
   <span class="token key atrule">config</span><span class="token punctuation">:</span>
    <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span><span class="token punctuation">,</span>127.0.0.1<span class="token punctuation">:</span><span class="token number">8849</span><span class="token punctuation">,</span>127.0.0.1<span class="token punctuation">:</span><span class="token number">8850</span>
    <span class="token comment"># 锁定server端的配置⽂件（读取它的配置项）</span>
     <span class="token key atrule">namespace</span><span class="token punctuation">:</span> 07137f0a<span class="token punctuation">-</span>bf66<span class="token punctuation">-</span>424b<span class="token punctuation">-</span>b910<span class="token punctuation">-</span>20ece612395a <span class="token comment"># 命名空间id</span>
     <span class="token key atrule">group</span><span class="token punctuation">:</span> DEFAULT_GROUP <span class="token comment"># 默认分组就是DEFAULT_GROUP，如果使⽤默认分组可以不配置</span>
     <span class="token key atrule">file-extension</span><span class="token punctuation">:</span> yaml <span class="token comment">#默认properties</span>
     <span class="token comment"># 根据规则拼接出来的dataId效果：lagou-service-resume.yaml</span>
     ext<span class="token punctuation">-</span>config<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
      <span class="token key atrule">data-id</span><span class="token punctuation">:</span> abc.yaml
      <span class="token key atrule">group</span><span class="token punctuation">:</span> DEFAULT_GROUP
      <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#开启扩展dataId的动态刷新</span>
     ext<span class="token punctuation">-</span>config<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
      <span class="token key atrule">data-id</span><span class="token punctuation">:</span> def.yaml
      <span class="token key atrule">group</span><span class="token punctuation">:</span> DEFAULT_GROUP
      <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#开启扩展dataId的动态刷新</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>优先级：根据规则⽣成的dataId &gt; 扩展的dataId（对于扩展的dataId，[n] n越大优先级越高）</p>`,96),d=[r];function k(m,v){return s(),a("div",null,d)}const b=n(u,[["render",k],["__file","71.html.vue"]]);export{b as default};
